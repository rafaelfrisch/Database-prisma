generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  userId Int     @unique
  user   User    @relation(fields: [userId], references: [id])
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String?
  posts   Post[]
  profile Profile?
}

model Order {
  order_id                      String         @unique
  order_status                  String?
  order_purchase_timestamp      DateTime?
  order_approved_at             DateTime?
  order_delivered_carrier_date  DateTime?
  order_delivered_customer_date DateTime?
  order_estimated_delivery_date DateTime?
  customer_id                   String         @unique
  customer                      Customer       @relation(fields: [customer_id], references: [customer_id])
  order_items                   Order_item[]
  order_payment                 Order_payment?
}

model Customer {
  customer_id        String  @unique
  customer_unique_id String?
  customer_city      String?
  customer_state     String?
  order              Order?
}

model Order_item {
  order_item_id       Int       @id
  shipping_limit_date DateTime?
  price               Float?
  freight_value       Float?
  order_item_quantity Int?
  order_id            String
  product_id          String    
  seller_id           String    
  order               Order     @relation(fields: [order_id], references: [order_id])
  product             Product   @relation(fields: [product_id], references: [product_id])
  seller              Seller    @relation(fields: [seller_id], references: [seller_id])
}

model Seller {
  seller_id    String      @unique
  seller_city  String?
  seller_state String?
  order_item   Order_item[]
}

model Product {
  product_id                 String      @unique
  product_category_name      String?
  product_name_length        Int?
  product_description_length Int?
  product_photos_qty         Int?
  product_weight_g           Int?
  product_length_cm          Int?
  product_height_cm          Int?
  product_width_cm           Int?
  order_item                 Order_item[]
}

model Order_payment {
  payment_id           Int     @id
  payment_sequential   Int?
  payment_type         String?
  payment_installments Int?
  payment_value        Float?
  order_id             String  @unique
  order                Order   @relation(fields: [order_id], references: [order_id])
}
